Для решения задачи методом Монте-Карло, необходимо сгенерировать большое количество случайных точек внутри области ограничения и определить, какая доля из них попадает внутрь фигуры.

Для каждой из фигур понадобится определить область ограничения и написать функцию, генерирующую точки внутри этой области.

а) Половина синусоиды ограничена следующими уравнениями:

y >= 0
y <= 0.5 * sin(x)

Функция, генерирующая случайную точку внутри области, будет выглядеть следующим образом:

import random
import math

def generate_point(a, b):
    x = random.uniform(a, b)
    y = random.uniform(0, 0.5 * math.sin(x))
    return x, y

Для оценки площади фигуры, нужно сгенерировать достаточное количество точек и подсчитать долю из них, которая попадает внутрь фигуры. Для этого можно написать следующую функцию:

def estimate_area(func, a, b, n):
    count = 0
    for i in range(n):
        x, y = func(a, b)
        if y >= 0 and y <= 0.5 * math.sin(x):
            count += 1
    area = count / n * (b - a) * 0.5
    return area

# Пример использования
area = estimate_area(generate_point, 0, math.pi, 1000000)
print(area)

б) Квадратная парабола ограничена следующими уравнениями:

y >= 0
y <= x ** 2
y <= 3 - x

Для генерации случайных точек внутри этой области, можно использовать следующую функцию:

def generate_point(a, b):
    x = random.uniform(a, b)
    y = random.uniform(0, x ** 2)
    if y > 3 - x:
        return generate_point(a, b) # точка не соответствует области ограничения, рекурсивно генерируем новую
    return x, y

Оценка площади может быть выполнена аналогично фигуре синусоиды:

area = estimate_area(generate_point, -1, 2, 1000000)
print(area)

